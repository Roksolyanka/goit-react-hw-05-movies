{"version":3,"file":"static/js/912.2bc136bc.chunk.js","mappings":"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","sources":["pages/Cast/CastContainer.styled.jsx","pages/Cast/Cast.jsx","services/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  padding-top: 60px;\n  padding-left: 60px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const CastLink = styled.li`\n  width: 150px;\n  height: 200px;\n  border-radius: 5px;\n  position: relative;\n\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(180deg, #0000 63.48%, #000000e6 92.16%);\n    border-radius: 5px;\n    position: absolute;\n  }\n`;\n\nexport const CastPhoto = styled.img`\n  border-radius: 5px;\n  max-width: 100%;\n`;\n\nexport const CastInfo = styled.div`\n  position: absolute;\n  bottom: 0;\n  padding-left: 12px;\n  padding-right: 12px;\n`;\n\nexport const CastName = styled.p`\n  margin: 0;\n  color: #fff;\n  font-size: 12px;\n`;\n\nexport const CastCharacter = styled.p`\n  margin-top: 0;\n  color: #fff;\n  font-size: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport {\n  CastContainer,\n  CastList,\n  CastLink,\n  CastPhoto,\n  CastInfo,\n  CastName,\n  CastCharacter,\n} from './CastContainer.styled';\nimport photo from '../../images/nophoto.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      const fetchCast = await fetchMovieCast(movieId);\n      setCast(fetchCast);\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  const getPhotoUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/w200/${path}` : photo;\n  };\n\n  return (\n    <CastContainer>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(actor => (\n            <CastLink key={actor.id}>\n              <CastPhoto\n                src={getPhotoUrl(actor.profile_path)}\n                alt={actor.name}\n                width={150}\n                height={200}\n              />\n              <CastInfo>\n                <CastName>{actor.name}</CastName>\n                <CastCharacter>Character: {actor.character}</CastCharacter>\n              </CastInfo>\n            </CastLink>\n          ))}\n        </CastList>\n      ) : (\n        <p>We don't have any cast information for this movie.</p>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '6c6629b9a6051b47df8b53c44a5b68ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching movie credits:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieSearch(query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    return [];\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["CastContainer","styled","CastList","CastLink","CastPhoto","CastInfo","CastName","CastCharacter","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","fetchMovieCast","fetchCast","length","map","actor","src","path","profile_path","photo","alt","name","width","height","character","id","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","console","log","fetchMovieDetails","fetchMovieReviews","fetchMovieSearch","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}