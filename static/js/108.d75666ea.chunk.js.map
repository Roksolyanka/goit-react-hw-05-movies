{"version":3,"file":"static/js/108.d75666ea.chunk.js","mappings":"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","sources":["pages/MoviesSearchResult/SearchResult.styled.jsx","pages/MoviesSearchResult/MovieSearchResult.jsx","services/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchResultContainer = styled.div`\n  padding: 15px;\n`;\n\nexport const SearchResultList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const SearchResultLink = styled.li`\n  width: 224px;\n  height: 325px;\n  cursor: pointer;\n  border-radius: 5px;\n  position: relative;\n\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(180deg, #0000 63.48%, #000000e6 92.16%);\n    border-radius: 5px;\n    position: absolute;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  max-width: 100%;\n`;\n\nexport const MovieTitle = styled.p`\n  position: absolute;\n  bottom: 0;\n  padding-left: 12px;\n  padding-right: 12px;\n  color: #fff;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMovieSearch } from 'services/api';\nimport poster from '../../images/coming_soon_default.jpg';\nimport {\n  SearchResultContainer,\n  SearchResultList,\n  SearchResultLink,\n  Image,\n  MovieTitle,\n} from './SearchResult.styled';\n\nconst MovieSearchResult = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieSearch = async () => {\n      try {\n        const queryParams = new URLSearchParams(location.search);\n        const query = queryParams.get('query');\n\n        if (query) {\n          const fetchSearchResult = await fetchMovieSearch(query);\n          setSearchResults(fetchSearchResult);\n        }\n      } catch (error) {\n        console.log('Error searching movies:', error);\n      }\n    };\n\n    getMovieSearch();\n  }, [location.search]);\n\n  const getImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/w200/${path}` : poster;\n  };\n\n  return (\n    <SearchResultContainer>\n      <div>\n        <SearchResultList>\n          {searchResults.map(movie => (\n            <Link\n              key={movie.id}\n              state={{ from: location }}\n              to={`/movies/${movie.id}`}\n            >\n              <SearchResultLink>\n                <Image\n                  src={getImageUrl(movie.poster_path)}\n                  alt={movie.title}\n                  width={224}\n                  height={325}\n                />\n                <MovieTitle>{movie.title}</MovieTitle>\n              </SearchResultLink>\n            </Link>\n          ))}\n        </SearchResultList>\n      </div>\n    </SearchResultContainer>\n  );\n};\n\nexport default MovieSearchResult;\n\n/* <Link\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {movie.title}\n                </Link> */\n","const API_KEY = '6c6629b9a6051b47df8b53c44a5b68ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching movie credits:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieSearch(query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    return [];\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["SearchResultContainer","styled","SearchResultList","SearchResultLink","Image","MovieTitle","useState","searchResults","setSearchResults","location","useLocation","useEffect","getMovieSearch","queryParams","URLSearchParams","search","query","get","fetchMovieSearch","fetchSearchResult","console","log","map","movie","state","from","to","id","src","path","poster_path","poster","alt","title","width","height","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}