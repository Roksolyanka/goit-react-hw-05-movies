{"version":3,"file":"static/js/736.772ca0f6.chunk.js","mappings":"6NAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACKC,EAAAA,EAAAA,IAAkBP,GADvB,OAChBQ,EADgB,OAEtBJ,EAAWI,GAFW,2CAAH,qDAKrBF,GACD,GAAE,CAACN,KAGF,yBACGG,EAAQM,OAAS,GAChB,wBACGN,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,uBAAG,+CAIV,C,sLCjCKC,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,MAAM,GAAD,OACvBF,EADuB,sCACeD,IAHxC,cAEGI,EAFH,gBAKgBA,EAASC,OALzB,cAKGC,EALH,yBAMIA,EAAKC,SANT,yCAQHC,QAAQC,IAAI,kCAAZ,MARG,kBASI,IATJ,iFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCzB,GAAjC,kGAEoBkB,MAAM,GAAD,OACvBF,EADuB,kBACLhB,EADK,oBACce,IAHvC,cAEGI,EAFH,gBAKgBA,EAASC,OALzB,cAKGC,EALH,yBAMIA,GANJ,yCAQHE,QAAQC,IAAI,gCAAZ,MARG,kBASI,MATJ,iFAaA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,kGAEoBkB,MAAM,GAAD,OACvBF,EADuB,kBACLhB,EADK,4BACsBe,IAH/C,cAEGI,EAFH,gBAKgBA,EAASC,OALzB,cAKGC,EALH,yBAMIA,EAAKM,MANT,yCAQHJ,QAAQC,IAAI,gCAAZ,MARG,kBASI,IATJ,iFAaA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCP,GAAjC,kGAEoBkB,MAAM,GAAD,OACvBF,EADuB,kBACLhB,EADK,4BACsBe,IAH/C,cAEGI,EAFH,gBAKgBA,EAASC,OALzB,cAKGC,EALH,yBAMIA,EAAKC,SANT,yCAQHC,QAAQC,IAAI,gCAAZ,MARG,kBASI,IATJ,iFAaA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,kGAEoBX,MAAM,GAAD,OACvBF,EADuB,8BACOa,EADP,oBACwBd,IAHjD,cAEGI,EAFH,gBAKgBA,EAASC,OALzB,cAKGC,EALH,yBAMIA,EAAKC,SANT,yCAQHC,QAAQC,IAAI,0BAAZ,MARG,kBASI,IATJ,iF,sBCvDP,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["pages/Reviews.jsx","services/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      const fetchReviews = await fetchMovieReviews(movieId);\n      setReviews(fetchReviews);\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '6c6629b9a6051b47df8b53c44a5b68ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching movie credits:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieSearch(query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    return [];\n  }\n}\n\n// export const fetchPosts = async () => {\n//   const { data } = await axios.get(`${BASE_URL}/posts`);\n//   return data;\n// };\n\n// export const fetchPostComments = async movieId => {\n//   const { data } = await axios.get(`${BASE_URL}/posts/${movieId}/comments`);\n//   return data;\n// };\n\n// async function getTrendingMovie() {\n//   const response = await fetch(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// }\n\n// export const getMovieById = async movieId => {\n//   const response = await fetch(\n//     `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// };\n\n// export const getMovieCastById = async movieId => {\n//   const response = await fetch(\n//     `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// };\n\n// export const getMovieReviewsById = async movieId => {\n//   const response = await fetch(\n//     `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// };\n\n// export async function getSearchByKeyWord(query, page) {\n//   const response = await fetch(\n//     `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n//   );\n\n//   return response.json();\n// }\n\n// export const STATUS = {\n//   idle: 'idle',\n//   pending: 'pending',\n//   rejected: 'rejected',\n//   resolved: 'resolved',\n// };\n\n// export default API_KEY;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","fetchMovieReviews","fetchReviews","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","console","log","fetchMovieDetails","fetchMovieCast","cast","fetchMovieSearch","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}