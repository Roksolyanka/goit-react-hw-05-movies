{"version":3,"file":"static/js/736.d8940db7.chunk.js","mappings":"yNA0CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,+GAECC,MAAM,uCAAD,OACaP,EADb,4BACwCQ,EAAAA,IAH9C,cAEhBC,EAFgB,gBAKHA,EAASC,OALN,OAKhBC,EALgB,OAMtBP,EAAWO,EAAKC,SANM,kDAQtBC,QAAQC,IAAI,gCAAZ,MARsB,0DAAH,qDAYvBR,GACD,GAAE,CAACN,KAGF,yBACGG,EAAQY,OAAS,GAChB,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,uBAAG,+CAIV,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API_KEY from 'components/config';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3//movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.log('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","fetch","API_KEY","response","json","data","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}