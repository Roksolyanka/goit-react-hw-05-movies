{"version":3,"file":"static/js/441.d1a5faf6.chunk.js","mappings":"yNAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACKC,EAAAA,EAAAA,IAAkBP,GADvB,OAChBQ,EADgB,OAEtBJ,EAAWI,GAFW,2CAAH,qDAKrBF,GACD,GAAE,CAACN,KAGF,yBACGG,EAAQM,OAAS,GAChB,wBACGN,EAAQO,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,uBAAG,+CAIV,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      const fetchReviews = await fetchMovieReviews(movieId);\n      setReviews(fetchReviews);\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","fetchMovieReviews","fetchReviews","length","map","review","author","content","id"],"sourceRoot":""}