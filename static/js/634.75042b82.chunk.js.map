{"version":3,"file":"static/js/634.75042b82.chunk.js","mappings":"sRAEaA,EAAgBC,EAAAA,GAAAA,IAAH,0CAIbC,EAAWD,EAAAA,GAAAA,GAAH,iIAQRE,EAAWF,EAAAA,GAAAA,GAAH,iTAgBRG,EAAYH,EAAAA,GAAAA,IAAH,mEAKTI,EAAWJ,EAAAA,GAAAA,IAAH,4GAORK,EAAWL,EAAAA,GAAAA,EAAH,0EAMRM,EAAgBN,EAAAA,GAAAA,EAAH,8E,+DCS1B,EA3Ca,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qGACKC,EAAAA,EAAAA,IAAeP,GADpB,OACbQ,EADa,OAEnBJ,EAAQI,GAFW,2CAAH,qDAKlBF,GACD,GAAE,CAACN,IAMJ,OACE,SAACR,EAAD,UACGW,EAAKM,OAAS,GACb,SAACf,EAAD,UACGS,EAAKO,KAAI,SAAAC,GAAK,OACb,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,KAXMC,EAWWF,EAAMG,aAV5BD,EAAI,0CAAsCA,GAASE,GAW9CC,IAAKL,EAAMM,KACXC,MAAO,IACPC,OAAQ,OAEV,UAACtB,EAAD,YACE,SAACC,EAAD,UAAWa,EAAMM,QACjB,UAAClB,EAAD,WAAe,cAAYY,EAAMS,kBATtBT,EAAMU,IATX,IAAAR,CAQG,OAgBjB,uBAAG,wDAIV,C","sources":["pages/Cast/CastContainer.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  padding: 15px;\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const CastLink = styled.li`\n  width: 150px;\n  height: 200px;\n  border-radius: 5px;\n  position: relative;\n\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(180deg, #0000 63.48%, #000000e6 92.16%);\n    border-radius: 5px;\n    position: absolute;\n  }\n`;\n\nexport const CastPhoto = styled.img`\n  border-radius: 5px;\n  max-width: 100%;\n`;\n\nexport const CastInfo = styled.div`\n  position: absolute;\n  bottom: 0;\n  padding-left: 12px;\n  padding-right: 12px;\n`;\n\nexport const CastName = styled.p`\n  margin: 0;\n  color: #fff;\n  font-size: 12px;\n`;\n\nexport const CastCharacter = styled.p`\n  margin-top: 0;\n  color: #fff;\n  font-size: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport {\n  CastContainer,\n  CastList,\n  CastLink,\n  CastPhoto,\n  CastInfo,\n  CastName,\n  CastCharacter,\n} from './CastContainer.styled';\nimport photo from '../../images/nophoto.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      const fetchCast = await fetchMovieCast(movieId);\n      setCast(fetchCast);\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  const getPhotoUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/w200/${path}` : photo;\n  };\n\n  return (\n    <CastContainer>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(actor => (\n            <CastLink key={actor.id}>\n              <CastPhoto\n                src={getPhotoUrl(actor.profile_path)}\n                alt={actor.name}\n                width={150}\n                height={200}\n              />\n              <CastInfo>\n                <CastName>{actor.name}</CastName>\n                <CastCharacter>Character: {actor.character}</CastCharacter>\n              </CastInfo>\n            </CastLink>\n          ))}\n        </CastList>\n      ) : (\n        <p>We don't have any cast information for this movie.</p>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n"],"names":["CastContainer","styled","CastList","CastLink","CastPhoto","CastInfo","CastName","CastCharacter","movieId","useParams","useState","cast","setCast","useEffect","getMovieCast","fetchMovieCast","fetchCast","length","map","actor","src","path","profile_path","photo","alt","name","width","height","character","id"],"sourceRoot":""}