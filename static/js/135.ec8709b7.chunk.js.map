{"version":3,"file":"static/js/135.ec8709b7.chunk.js","mappings":"oRAEaA,EAAmBC,EAAAA,GAAAA,IAAH,0CAIhBC,EAAcD,EAAAA,GAAAA,GAAH,iIAQXE,EAAcF,EAAAA,GAAAA,GAAH,2MASXG,EAAgBH,EAAAA,GAAAA,GAAH,sDAIbI,EAAiBJ,EAAAA,GAAAA,EAAH,sDAIdK,EAAYL,EAAAA,GAAAA,EAAH,mG,SCYtB,EA/BgB,WACd,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,qGACKC,EAAAA,EAAAA,IAAkBP,GADvB,OAChBQ,EADgB,OAEtBJ,EAAWI,GAFW,2CAAH,qDAKrBF,GACD,GAAE,CAACN,KAGF,SAACP,EAAD,UACGU,EAAQM,OAAS,GAChB,SAACd,EAAD,UACGQ,EAAQO,KAAI,SAAAC,GAAM,OACjB,UAACf,EAAD,YACE,UAACC,EAAD,WAAe,WAASc,EAAOC,WAC/B,SAACd,EAAD,UAAiBa,EAAOE,YAFRF,EAAOG,GADR,OAQrB,SAACf,EAAD,UAAW,+CAIlB,C","sources":["pages/Reviews/ReviewsContainer.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 15px;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const ReviewsLink = styled.li`\n  width: 100%;\n  border-radius: 6px;\n  padding: 12px 20px;\n  border: 1px solid rgba(227, 227, 227, 1);\n  box-sizing: border-box;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const ReviewsAuthor = styled.h3`\n  color: rgba(3, 37, 65, 1);\n`;\n\nexport const ReviewsContent = styled.p`\n  color: rgba(3, 37, 65, 1);\n`;\n\nexport const NoReviews = styled.p`\n  color: rgba(3, 37, 65, 1);\n  font-weight: bold;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/api';\nimport {\n  ReviewsContainer,\n  ReviewsList,\n  ReviewsLink,\n  ReviewsAuthor,\n  ReviewsContent,\n  NoReviews,\n} from './ReviewsContainer.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      const fetchReviews = await fetchMovieReviews(movieId);\n      setReviews(fetchReviews);\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(review => (\n            <ReviewsLink key={review.id}>\n              <ReviewsAuthor>Author: {review.author}</ReviewsAuthor>\n              <ReviewsContent>{review.content}</ReviewsContent>\n            </ReviewsLink>\n          ))}\n        </ReviewsList>\n      ) : (\n        <NoReviews>We don't have any reviews for this movie.</NoReviews>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsContainer","styled","ReviewsList","ReviewsLink","ReviewsAuthor","ReviewsContent","NoReviews","movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","fetchMovieReviews","fetchReviews","length","map","review","author","content","id"],"sourceRoot":""}