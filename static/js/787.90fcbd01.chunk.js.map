{"version":3,"file":"static/js/787.90fcbd01.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetailsContainer.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div`\n  padding-top: 100px;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const LinkGoBack = styled(NavLink)`\n  color: rgba(3, 37, 65, 1);\n  font-weight: bold;\n  font-size: 25px;\n`;\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const BackgroundMovie = styled.div`\n  position: relative;\n  background-image: linear-gradient(\n      rgba(46, 47, 66, 0.6),\n      rgba(46, 47, 66, 0.6)\n    ),\n    url(${props => props.backgroundurl});\n  background-size: cover;\n  background-position: center;\n  height: 850px;\n`;\n\nexport const MovieDetailsImage = styled.img`\n  padding-left: 20px;\n  padding-top: 20px;\n`;\n\nexport const MovieDetailsTitle = styled.h1`\n  text-align: center;\n  color: #fff;\n`;\n\nexport const UserScore = styled.p`\n  color: #fff;\n`;\n\nexport const OverviewTitle = styled.h2`\n  color: #fff;\n`;\n\nexport const Overview = styled.p`\n  color: #fff;\n`;\n\nexport const GenresTitle = styled.h2`\n  color: #fff;\n`;\n\nexport const Genres = styled.p`\n  color: #fff;\n`;\n\nexport const AdditionalInformation = styled.h3`\n  color: #fff;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  list-style: none;\n  padding-left: 60px;\n  color: #fff;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  position: relative;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  color: #fff;\n  text-decoration: none;\n  border-radius: 30px;\n  border: 1px solid #fff;\n  border-spacing: 0;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n\n  &.active {\n    color: rgba(3, 37, 65, 1);\n    background-color: #fff;\n  }\n`;\n","import { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { useParams, Routes, Route, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport {\n  MovieDetailsContainer,\n  LinkGoBack,\n  MovieDetailsWrapper,\n  BackgroundMovie,\n  MovieDetailsImage,\n  MovieDetailsTitle,\n  UserScore,\n  OverviewTitle,\n  Overview,\n  GenresTitle,\n  Genres,\n  AdditionalInformation,\n  AdditionalInfoList,\n  AdditionalInfoLink,\n} from './MovieDetailsContainer.styled';\nimport poster from '../../images/coming_soon_default.jpg';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      const fetchDetailsOfMovie = await fetchMovieDetails(movieId);\n      setMovie(fetchDetailsOfMovie);\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  const getImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/w500/${path}` : poster;\n  };\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const getUserScore = score => {\n    return Math.round(score);\n  };\n\n  return (\n    <MovieDetailsContainer>\n      <LinkGoBack to={backLinkHref.current}>&larr; Go back</LinkGoBack>\n      {movie !== null && (\n        <BackgroundMovie\n          backgroundurl={\n            movie.backdrop_path\n              ? `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`\n              : ''\n          }\n        >\n          <MovieDetailsWrapper>\n            <div>\n              <MovieDetailsImage\n                src={getImageUrl(movie.poster_path)}\n                alt={movie.title}\n                width={500}\n                height={650}\n              />\n            </div>\n            <div>\n              <MovieDetailsTitle>{movie.title}</MovieDetailsTitle>\n              <UserScore>\n                User Score: {getUserScore(movie.vote_average)}%\n              </UserScore>\n              <OverviewTitle>Overview</OverviewTitle>\n              <Overview>{movie.overview}</Overview>\n              <GenresTitle>Genres</GenresTitle>\n              <Genres>\n                {movie.genres.map(genre => genre.name).join(', ')}\n              </Genres>\n              <div>\n                <AdditionalInformation>\n                  Additional information\n                </AdditionalInformation>\n                <AdditionalInfoList>\n                  <li>\n                    <AdditionalInfoLink to={`/movies/${movieId}/cast`}>\n                      Cast\n                    </AdditionalInfoLink>\n                  </li>\n                  <li>\n                    <AdditionalInfoLink to={`/movies/${movieId}/reviews`}>\n                      Reviews\n                    </AdditionalInfoLink>\n                  </li>\n                </AdditionalInfoList>\n              </div>\n            </div>\n          </MovieDetailsWrapper>\n        </BackgroundMovie>\n      )}\n      <Suspense\n        fallback={\n          <MagnifyingGlass\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"MagnifyingGlass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"MagnifyingGlass-wrapper\"\n            glassColor=\"#c0efff\"\n            color=\"#e15b64\"\n          />\n        }\n      >\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '6c6629b9a6051b47df8b53c44a5b68ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching movie credits:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieSearch(query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    return [];\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieDetailsContainer","styled","LinkGoBack","NavLink","MovieDetailsWrapper","BackgroundMovie","props","backgroundurl","MovieDetailsImage","MovieDetailsTitle","UserScore","OverviewTitle","Overview","GenresTitle","Genres","AdditionalInformation","AdditionalInfoList","AdditionalInfoLink","Cast","lazy","Reviews","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieDetails","fetchMovieDetails","fetchDetailsOfMovie","score","path","to","current","backdrop_path","src","poster_path","poster","alt","title","width","height","vote_average","Math","round","overview","genres","map","genre","name","join","Suspense","fallback","visible","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","element","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","console","log","fetchMovieCast","cast","fetchMovieReviews","fetchMovieSearch","query","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}