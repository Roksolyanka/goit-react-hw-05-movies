{"version":3,"file":"static/js/595.5018c896.chunk.js","mappings":"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","sources":["pages/MovieSearchResult.jsx","services/api.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMovieSearch } from 'services/api';\n\nconst MovieSearchResult = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieSearch = async () => {\n      try {\n        const queryParams = new URLSearchParams(location.search);\n        const query = queryParams.get('query');\n\n        if (query) {\n          const fetchSearchResult = await fetchMovieSearch(query);\n          setSearchResults(fetchSearchResult);\n        }\n      } catch (error) {\n        console.log('Error searching movies:', error);\n      }\n    };\n\n    getMovieSearch();\n  }, [location.search]);\n\n  return (\n    <div>\n      {searchResults.length > 0 ? (\n        <div>\n          <ul>\n            {searchResults.map(movie => (\n              <li key={movie.id}>\n                <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieSearchResult;\n\n/* <Link\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {movie.title}\n                </Link> */\n","const API_KEY = '6c6629b9a6051b47df8b53c44a5b68ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await fetch(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    return null;\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.cast;\n  } catch (error) {\n    console.log('Error fetching movie credits:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error);\n    return [];\n  }\n}\n\nexport async function fetchMovieSearch(query) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    return [];\n  }\n}\n\n// export const fetchPosts = async () => {\n//   const { data } = await axios.get(`${BASE_URL}/posts`);\n//   return data;\n// };\n\n// export const fetchPostComments = async movieId => {\n//   const { data } = await axios.get(`${BASE_URL}/posts/${movieId}/comments`);\n//   return data;\n// };\n\n// async function getTrendingMovie() {\n//   const response = await fetch(\n//     `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// }\n\n// export const getMovieById = async movieId => {\n//   const response = await fetch(\n//     `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// };\n\n// export const getMovieCastById = async movieId => {\n//   const response = await fetch(\n//     `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// };\n\n// export const getMovieReviewsById = async movieId => {\n//   const response = await fetch(\n//     `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//   );\n\n//   return response.json();\n// };\n\n// export async function getSearchByKeyWord(query, page) {\n//   const response = await fetch(\n//     `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n//   );\n\n//   return response.json();\n// }\n\n// export const STATUS = {\n//   idle: 'idle',\n//   pending: 'pending',\n//   rejected: 'rejected',\n//   resolved: 'resolved',\n// };\n\n// export default API_KEY;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","searchResults","setSearchResults","location","useLocation","useEffect","getMovieSearch","queryParams","URLSearchParams","search","query","get","fetchMovieSearch","fetchSearchResult","console","log","length","map","movie","state","from","to","id","title","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","json","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}